{"version":3,"file":"cognitiveservices-visualsearch.js","sources":["../node_modules/tslib/tslib.es6.js","../src/models/index.ts","../src/models/mappers.ts","../src/models/imagesMappers.ts","../src/models/parameters.ts","../src/operations/images.ts","../src/visualSearchClientContext.ts","../src/visualSearchClient.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport { ServiceClientOptions } from \"@azure/ms-rest-js\";\nimport * as msRest from \"@azure/ms-rest-js\";\n\n/**\n * Contains the possible cases for ResponseBase.\n */\nexport type ResponseBaseUnion = ResponseBase | IdentifiableUnion;\n\n/**\n * Response base.\n */\nexport interface ResponseBase {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ResponseBase\";\n}\n\n/**\n * Contains the possible cases for Identifiable.\n */\nexport type IdentifiableUnion = Identifiable | ResponseUnion;\n\n/**\n * Defines the identity of a resource.\n */\nexport interface Identifiable {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Identifiable\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n}\n\n/**\n * Contains the possible cases for Response.\n */\nexport type ResponseUnion = Response | ImageKnowledge | ErrorResponse | ThingUnion;\n\n/**\n * Defines a response. All schemas that return at the root of the response must inherit from this\n * object.\n */\nexport interface Response {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Response\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n}\n\n/**\n * Contains the possible cases for Thing.\n */\nexport type ThingUnion = Thing | ImageTag | Organization | OfferUnion | CreativeWorkUnion | Person | IntangibleUnion;\n\n/**\n * Defines a thing.\n */\nexport interface Thing {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Thing\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for Intangible.\n */\nexport type IntangibleUnion = Intangible | StructuredValueUnion;\n\n/**\n * A utility class that serves as the umbrella for a number of 'intangible' things such as\n * quantities, structured values, etc.\n */\nexport interface Intangible {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Intangible\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for StructuredValue.\n */\nexport type StructuredValueUnion = StructuredValue | Point2D | NormalizedQuadrilateral;\n\n/**\n * An interface representing StructuredValue.\n */\nexport interface StructuredValue {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"StructuredValue\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Defines a 2D point with X and Y coordinates.\n */\nexport interface Point2D {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Point2D\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The x-coordinate of the point.\n   */\n  x: number;\n  /**\n   * The y-coordinate of the point.\n   */\n  y: number;\n}\n\n/**\n * Defines a region of an image. The region is a convex quadrilateral defined by coordinates of its\n * top left, top right, bottom left, and bottom right points. The coordinates are fractional values\n * of the original image's width and height in the range 0.0 through 1.0.\n */\nexport interface NormalizedQuadrilateral {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"NormalizedQuadrilateral\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The top left corner coordinate.\n   */\n  topLeft: Point2D;\n  /**\n   * The top right corner coordinate.\n   */\n  topRight: Point2D;\n  /**\n   * The bottom right corner coordinate.\n   */\n  bottomRight: Point2D;\n  /**\n   * The bottom left corner coordinate.\n   */\n  bottomLeft: Point2D;\n}\n\n/**\n * Defines an image region relevant to the ImageTag.\n */\nexport interface ImageTagRegion {\n  /**\n   * A rectangle that outlines the area of interest for this tag.\n   */\n  queryRectangle: NormalizedQuadrilateral;\n  /**\n   * A recommended rectangle to show to the user.\n   */\n  displayRectangle: NormalizedQuadrilateral;\n}\n\n/**\n * Contains the possible cases for CreativeWork.\n */\nexport type CreativeWorkUnion = CreativeWork | ActionUnion | MediaObjectUnion | Recipe;\n\n/**\n * The most generic kind of creative work, including books, movies, photographs, software programs,\n * etc.\n */\nexport interface CreativeWork {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"CreativeWork\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for Action.\n */\nexport type ActionUnion = Action | ImageActionUnion;\n\n/**\n * Defines an action.\n */\nexport interface Action {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Action\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n}\n\n/**\n * Contains the possible cases for ImageAction.\n */\nexport type ImageActionUnion = ImageAction | ImageEntityAction | ImageModuleAction | ImageRecipesAction | ImageRelatedSearchesAction | ImageShoppingSourcesAction;\n\n/**\n * Defines an image action.\n */\nexport interface ImageAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n}\n\n/**\n * A visual search tag.\n */\nexport interface ImageTag {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageTag\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * Display name for this tag. For the default tag, the display name is empty.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * The bounding box for this tag. For the default tag, there is no bounding box.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly boundingBox?: ImageTagRegion;\n  /**\n   * Actions within this tag. The order of the items denotes the default ranking order of these\n   * actions, with the first action being the most likely user intent.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actions?: ImageActionUnion[];\n}\n\n/**\n * Defines an organization.\n */\nexport interface Organization {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Organization\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n}\n\n/**\n * Contains the possible cases for PropertiesItem.\n */\nexport type PropertiesItemUnion = PropertiesItem | RatingUnion;\n\n/**\n * Defines an item.\n */\nexport interface PropertiesItem {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Properties/Item\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n}\n\n/**\n * Contains the possible cases for Rating.\n */\nexport type RatingUnion = Rating | AggregateRating;\n\n/**\n * Defines a rating.\n */\nexport interface Rating {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Rating\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The mean (average) rating. The possible values are 1.0 through 5.0.\n   */\n  ratingValue: number;\n  /**\n   * The highest rated review. The possible values are 1.0 through 5.0.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bestRating?: number;\n}\n\n/**\n * Defines the metrics that indicate how well an item was rated by others.\n */\nexport interface AggregateRating {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"AggregateRating\";\n  /**\n   * Text representation of an item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The mean (average) rating. The possible values are 1.0 through 5.0.\n   */\n  ratingValue: number;\n  /**\n   * The highest rated review. The possible values are 1.0 through 5.0.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bestRating?: number;\n  /**\n   * The number of times the recipe has been rated or reviewed.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly reviewCount?: number;\n}\n\n/**\n * Contains the possible cases for Offer.\n */\nexport type OfferUnion = Offer | AggregateOffer;\n\n/**\n * Defines a merchant's offer.\n */\nexport interface Offer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Offer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * Seller for this offer.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly seller?: Organization;\n  /**\n   * The item's price.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly price?: number;\n  /**\n   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',\n   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',\n   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',\n   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',\n   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',\n   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',\n   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',\n   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',\n   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',\n   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',\n   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',\n   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',\n   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',\n   * 'ZMW'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**.\n   * Default value: 'USD'.\n   */\n  readonly priceCurrency?: Currency;\n  /**\n   * The item's availability. The following are the possible values: Discontinued, InStock,\n   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values\n   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',\n   * 'OutOfStock', 'PreOrder', 'SoldOut'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly availability?: ItemAvailability;\n  /**\n   * An aggregated rating that indicates how well the product has been rated by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateRating?: AggregateRating;\n  /**\n   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastUpdated?: string;\n}\n\n/**\n * Defines a list of offers from merchants that are related to the image.\n */\nexport interface AggregateOffer {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"AggregateOffer\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * Seller for this offer.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly seller?: Organization;\n  /**\n   * The item's price.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly price?: number;\n  /**\n   * The monetary currency. For example, USD. Possible values include: 'USD', 'CAD', 'GBP', 'EUR',\n   * 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED', 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG',\n   * 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD', 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD',\n   * 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE', 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC',\n   * 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP', 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL',\n   * 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD', 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS',\n   * 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES', 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD',\n   * 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL', 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT',\n   * 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN', 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK',\n   * 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK', 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD',\n   * 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG', 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP',\n   * 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT', 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH',\n   * 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV', 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR',\n   * 'ZMW'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**.\n   * Default value: 'USD'.\n   */\n  readonly priceCurrency?: Currency;\n  /**\n   * The item's availability. The following are the possible values: Discontinued, InStock,\n   * InStoreOnly, LimitedAvailability, OnlineOnly, OutOfStock, PreOrder, SoldOut. Possible values\n   * include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability', 'OnlineOnly',\n   * 'OutOfStock', 'PreOrder', 'SoldOut'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly availability?: ItemAvailability;\n  /**\n   * An aggregated rating that indicates how well the product has been rated by others.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateRating?: AggregateRating;\n  /**\n   * The last date that the offer was updated. The date is in the form YYYY-MM-DD.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly lastUpdated?: string;\n  /**\n   * A list of offers from merchants that have offerings related to the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly offers?: OfferUnion[];\n}\n\n/**\n * Defines a count of the number of websites where you can shop or perform other actions related to\n * the image.\n */\nexport interface ImagesImageMetadata {\n  /**\n   * The number of websites that sell the products seen in the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly shoppingSourcesCount?: number;\n  /**\n   * The number of websites that offer recipes of the food seen in the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly recipeSourcesCount?: number;\n  /**\n   * A summary of the online offers of products found in the image. For example, if the image is of\n   * a dress, the offer might identify the lowest price and the number of offers found. Only\n   * visually similar products insights include this field. The offer includes the following\n   * fields: Name, AggregateRating, OfferCount, and LowPrice.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly aggregateOffer?: AggregateOffer;\n}\n\n/**\n * Contains the possible cases for MediaObject.\n */\nexport type MediaObjectUnion = MediaObject | ImageObject;\n\n/**\n * Defines a media object.\n */\nexport interface MediaObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"MediaObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g., the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * Size of the media object content. Use format \"value unit\" (e.g., \"1024 B\").\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentSize?: string;\n  /**\n   * Encoding format (e.g., png, gif, jpeg, etc).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly encodingFormat?: string;\n  /**\n   * Display URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageDisplayUrl?: string;\n  /**\n   * The width of the media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n}\n\n/**\n * Defines an image.\n */\nexport interface ImageObject {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageObject\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * Original URL to retrieve the source (file) for the media object (e.g., the source URL for the\n   * image).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentUrl?: string;\n  /**\n   * URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageUrl?: string;\n  /**\n   * Size of the media object content. Use format \"value unit\" (e.g., \"1024 B\").\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly contentSize?: string;\n  /**\n   * Encoding format (e.g., png, gif, jpeg, etc).\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly encodingFormat?: string;\n  /**\n   * Display URL of the page that hosts the media object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly hostPageDisplayUrl?: string;\n  /**\n   * The width of the media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly width?: number;\n  /**\n   * The height of the media object, in pixels.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly height?: number;\n  /**\n   * The URL to a thumbnail of the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n  /**\n   * The token that you use in a subsequent call to Visual Search API to get additional information\n   * about the image. For information about using this token, see the imageInsightsToken field\n   * inside the knowledgeRequest request parameter.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageInsightsToken?: string;\n  /**\n   * A count of the number of websites where you can shop or perform other actions related to the\n   * image. For example, if the image is of an apple pie, this object includes a count of the\n   * number of websites where you can buy an apple pie. To indicate the number of offers in your\n   * UX, include badging such as a shopping cart icon that contains the count. When the user clicks\n   * on the icon, use imageInsightsToken in a subsequent Visual Search API call to get the list of\n   * shopping websites.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly insightsMetadata?: ImagesImageMetadata;\n  /**\n   * Unique Id for the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly imageId?: string;\n  /**\n   * A three-byte hexadecimal number that represents the color that dominates the image. Use the\n   * color as the temporary background in your client until the image is loaded.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly accentColor?: string;\n  /**\n   * For internal use only.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly visualWords?: string;\n}\n\n/**\n * Defines a visual search API response.\n */\nexport interface ImageKnowledge {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageKnowledge\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list of visual search tags.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly tags?: ImageTag[];\n  /**\n   * Image object containing metadata about the requested image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n}\n\n/**\n * Defines the error that occurred.\n */\nexport interface ErrorModel {\n  /**\n   * The error code that identifies the category of error. Possible values include: 'None',\n   * 'ServerError', 'InvalidRequest', 'RateLimitExceeded', 'InvalidAuthorization',\n   * 'InsufficientAuthorization'. Default value: 'None'.\n   */\n  code: ErrorCode;\n  /**\n   * The error code that further helps to identify the error. Possible values include:\n   * 'UnexpectedError', 'ResourceError', 'NotImplemented', 'ParameterMissing',\n   * 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked', 'AuthorizationMissing',\n   * 'AuthorizationRedundancy', 'AuthorizationDisabled', 'AuthorizationExpired'\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly subCode?: ErrorSubCode;\n  /**\n   * A description of the error.\n   */\n  message: string;\n  /**\n   * A description that provides additional information about the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly moreDetails?: string;\n  /**\n   * The parameter in the request that caused the error.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly parameter?: string;\n  /**\n   * The parameter's value in the request that was not valid.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: string;\n}\n\n/**\n * The top-level response that represents a failed request.\n */\nexport interface ErrorResponse {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ErrorResponse\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * A list of errors that describe the reasons why the request failed.\n   */\n  errors: ErrorModel[];\n}\n\n/**\n * Defines a person.\n */\nexport interface Person {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Person\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The person's job title.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly jobTitle?: string;\n  /**\n   * The URL of the person's twitter profile.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly twitterProfile?: string;\n}\n\n/**\n * Defines an entity action.\n */\nexport interface ImageEntityAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageEntityAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n}\n\n/**\n * Defines a list of images.\n */\nexport interface ImagesModule {\n  /**\n   * A list of images.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: ImageObject[];\n}\n\n/**\n * Defines an image list action.\n */\nexport interface ImageModuleAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageModuleAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n  /**\n   * A list of images.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly data?: ImagesModule;\n}\n\n/**\n * Defines a cooking recipe.\n */\nexport interface Recipe {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"Recipe\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The amount of time the food takes to cook. For example, PT25M. For information about the time\n   * format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly cookTime?: string;\n  /**\n   * The amount of time required to prepare the ingredients. For example, PT15M. For information\n   * about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly prepTime?: string;\n  /**\n   * The total amount of time it takes to prepare and cook the recipe. For example, PT45M. For\n   * information about the time format, see http://en.wikipedia.org/wiki/ISO_8601#Durations.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly totalTime?: string;\n}\n\n/**\n * Defines a list of recipes.\n */\nexport interface RecipesModule {\n  /**\n   * A list of recipes.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: Recipe[];\n}\n\n/**\n * Defines an recipe action.\n */\nexport interface ImageRecipesAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageRecipesAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n  /**\n   * A list of recipes related to the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly data?: RecipesModule;\n}\n\n/**\n * Defines a search query.\n */\nexport interface Query {\n  /**\n   * The query string. Use this string as the query term in a new search request.\n   */\n  text: string;\n  /**\n   * The display version of the query term.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayText?: string;\n  /**\n   * The URL that takes the user to the Bing search results page for the query.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The URL that you use to get the results of the related search. Before using the URL, you must\n   * append query parameters as appropriate and include the Ocp-Apim-Subscription-Key header. Use\n   * this URL if you're displaying the results in your own user interface. Otherwise, use the\n   * webSearchUrl URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly searchLink?: string;\n  /**\n   * The URL to a thumbnail of a related image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnail?: ImageObject;\n}\n\n/**\n * Defines a list of related searches.\n */\nexport interface RelatedSearchesModule {\n  /**\n   * A list of related searches.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly value?: Query[];\n}\n\n/**\n * Defines an related search action.\n */\nexport interface ImageRelatedSearchesAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageRelatedSearchesAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n  /**\n   * A list of queries related to the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly data?: RelatedSearchesModule;\n}\n\n/**\n * Defines a shopping sources action.\n */\nexport interface ImageShoppingSourcesAction {\n  /**\n   * Polymorphic Discriminator\n   */\n  _type: \"ImageShoppingSourcesAction\";\n  /**\n   * A String identifier.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly id?: string;\n  /**\n   * The URL that returns this resource. To use the URL, append query parameters as appropriate and\n   * include the Ocp-Apim-Subscription-Key header.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly readLink?: string;\n  /**\n   * The URL to Bing's search result for this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly webSearchUrl?: string;\n  /**\n   * The name of the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly name?: string;\n  /**\n   * The URL to get more information about the thing represented by this object.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly url?: string;\n  /**\n   * An image of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly image?: ImageObject;\n  /**\n   * A short description of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly description?: string;\n  /**\n   * An alias for the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly alternateName?: string;\n  /**\n   * An ID that uniquely identifies this item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly bingId?: string;\n  /**\n   * The URL to a thumbnail of the item.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly thumbnailUrl?: string;\n  /**\n   * The source of the creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly provider?: ThingUnion[];\n  /**\n   * The date on which the CreativeWork was published.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly datePublished?: string;\n  /**\n   * Text content of this creative work.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly text?: string;\n  /**\n   * The result produced in the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly result?: ThingUnion[];\n  /**\n   * A display name for the action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly displayName?: string;\n  /**\n   * A Boolean representing whether this result is the top action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly isTopAction?: boolean;\n  /**\n   * Use this URL to get additional data to determine how to take the appropriate action. For\n   * example, the serviceUrl might return JSON along with an image URL.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly serviceUrl?: string;\n  /**\n   * A string representing the type of action.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly actionType?: string;\n  /**\n   * A list of merchants that offer items related to the image.\n   * **NOTE: This property will not be serialized. It can only be populated by the server.**\n   */\n  readonly data?: AggregateOffer;\n}\n\n/**\n * A JSON object consisting of coordinates specifying the four corners of a cropped rectangle\n * within the input image.\n */\nexport interface CropArea {\n  /**\n   * The top coordinate of the region to be cropped. The coordinate is a fractional value of the\n   * original image's height and is measured from the top edge of the image. Specify the coordinate\n   * as a value from 0.0 through 1.0.\n   */\n  top: number;\n  /**\n   * The bottom coordinate of the region to be cropped. The coordinate is a fractional value of the\n   * original image's height and is measured from the top edge of the image. Specify the coordinate\n   * as a value from 0.0 through 1.0.\n   */\n  bottom: number;\n  /**\n   * The left coordinate of the region to be cropped. The coordinate is a fractional value of the\n   * original image's width and is measured from the left edge of the image. Specify the coordinate\n   * as a value from 0.0 through 1.0.\n   */\n  left: number;\n  /**\n   * The right coordinate of the region to be cropped. The coordinate is a fractional value of the\n   * original image's width and is measured from the left edge of the image. Specify the coordinate\n   * as a value from 0.0 through 1.0.\n   */\n  right: number;\n}\n\n/**\n * A JSON object that identities the image to get insights of . It also includes the optional crop\n * area that you use to identify the region of interest in the image.\n */\nexport interface ImageInfo {\n  /**\n   * An image insights token. To get the insights token, call one of the Image Search APIs (for\n   * example, /images/search). In the search results, the\n   * [Image](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image)\n   * object's\n   * [imageInsightsToken](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-images-api-v7-reference#image-imageinsightstoken)\n   * field contains the token. The imageInsightsToken and url fields mutually exclusive; do not\n   * specify both. Do not specify an insights token if the request includes the image form data.\n   */\n  imageInsightsToken?: string;\n  /**\n   * The URL of the input image. The imageInsightsToken and url fields are mutually exclusive; do\n   * not specify both. Do not specify the URL if the request includes the image form data.\n   */\n  url?: string;\n  /**\n   * A JSON object consisting of coordinates specifying the four corners of a cropped rectangle\n   * within the input image. Use the crop area to identify the region of interest in the image. You\n   * can apply the crop area to the images specified using the imageInsightsToken or url fields, or\n   * an image binary specified in an image form data.\n   */\n  cropArea?: CropArea;\n}\n\n/**\n * A key-value object consisting of filters that may be specified to limit the results returned by\n * the API. Current available filters: site.\n */\nexport interface Filters {\n  /**\n   * The URL of the site to return similar images and similar products from. (e.g., \"www.bing.com\",\n   * \"bing.com\").\n   */\n  site?: string;\n}\n\n/**\n * A JSON object containing information about the request, such as filters for the resulting\n * actions.\n */\nexport interface KnowledgeRequest {\n  /**\n   * A key-value object consisting of filters that may be specified to limit the results returned\n   * by the API.\n   */\n  filters?: Filters;\n}\n\n/**\n * A JSON object that contains information about the image to get insights of. Specify this object\n * only in a knowledgeRequest form data.\n */\nexport interface VisualSearchRequest {\n  /**\n   * A JSON object that identities the image to get insights of.\n   */\n  imageInfo?: ImageInfo;\n  /**\n   * A JSON object containing information about the request, such as filters, or a description.\n   */\n  knowledgeRequest?: KnowledgeRequest;\n}\n\n/**\n * An interface representing VisualSearchClientOptions.\n */\nexport interface VisualSearchClientOptions extends ServiceClientOptions {\n  /**\n   * Supported Cognitive Services endpoints (protocol and hostname, for example:\n   * \"https://westus.api.cognitive.microsoft.com\", \"https://api.cognitive.microsoft.com\"). Default\n   * value: 'https://api.cognitive.microsoft.com'.\n   */\n  endpoint?: string;\n}\n\n/**\n * Optional Parameters.\n */\nexport interface ImagesVisualSearchOptionalParams extends msRest.RequestOptionsBase {\n  /**\n   * A comma-delimited list of one or more languages to use for user interface strings. The list is\n   * in decreasing order of preference. For additional information, including expected format, see\n   * [RFC2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). This header and the\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)\n   * query parameter are mutually exclusive; do not specify both. If you set this header, you must\n   * also specify the\n   * [cc](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#cc)\n   * query parameter. To determine the market to return results for, Bing uses the first supported\n   * language it finds from the list and combines it with the cc parameter value. If the list does\n   * not include a supported language, Bing finds the closest language and market that supports the\n   * request or it uses an aggregated or default market for the results. To determine the market\n   * that Bing used, see the BingAPIs-Market header. Use this header and the cc query parameter\n   * only if you specify multiple languages. Otherwise, use the\n   * [mkt](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#mkt)\n   * and\n   * [setLang](https://docs.microsoft.com/en-us/rest/api/cognitiveservices/bing-visual-search-api-v7-reference#setlang)\n   * query parameters. A user interface string is a string that's used as a label in a user\n   * interface. There are few user interface strings in the JSON response objects. Any links to\n   * Bing.com properties in the response objects apply the specified language.\n   */\n  acceptLanguage?: string;\n  /**\n   * Must be set to multipart/form-data and include a boundary parameter (for example,\n   * multipart/form-data; boundary=<boundary string>). For more details, see [Content form types](\n   * https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/overview#content-form-types).\n   */\n  contentType?: string;\n  /**\n   * The user agent originating the request. Bing uses the user agent to provide mobile users with\n   * an optimized experience. Although optional, you are encouraged to always specify this header.\n   * The user-agent should be the same string that any commonly used browser sends. For information\n   * about user agents, see [RFC 2616](http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html). The\n   * following are examples of user-agent strings. Windows Phone: Mozilla/5.0 (compatible; MSIE\n   * 10.0; Windows Phone 8.0; Trident/6.0; IEMobile/10.0; ARM; Touch; NOKIA; Lumia 822). Android:\n   * Mozilla / 5.0 (Linux; U; Android 2.3.5; en - us; SCH - I500 Build / GINGERBREAD) AppleWebKit /\n   * 533.1 (KHTML; like Gecko) Version / 4.0 Mobile Safari / 533.1. iPhone: Mozilla / 5.0 (iPhone;\n   * CPU iPhone OS 6_1 like Mac OS X) AppleWebKit / 536.26 (KHTML; like Gecko) Mobile / 10B142\n   * iPhone4; 1 BingWeb / 3.03.1428.20120423. PC: Mozilla / 5.0 (Windows NT 6.3; WOW64; Trident /\n   * 7.0; Touch; rv:11.0) like Gecko. iPad: Mozilla / 5.0 (iPad; CPU OS 7_0 like Mac OS X)\n   * AppleWebKit / 537.51.1 (KHTML, like Gecko) Version / 7.0 Mobile / 11A465 Safari / 9537.53.\n   */\n  userAgent?: string;\n  /**\n   * Bing uses this header to provide users with consistent behavior across Bing API calls. Bing\n   * often flights new features and improvements, and it uses the client ID as a key for assigning\n   * traffic on different flights. If you do not use the same client ID for a user across multiple\n   * requests, then Bing may assign the user to multiple conflicting flights. Being assigned to\n   * multiple conflicting flights can lead to an inconsistent user experience. For example, if the\n   * second request has a different flight assignment than the first, the experience may be\n   * unexpected. Also, Bing can use the client ID to tailor web results to that client ID’s search\n   * history, providing a richer experience for the user. Bing also uses this header to help\n   * improve result rankings by analyzing the activity generated by a client ID. The relevance\n   * improvements help with better quality of results delivered by Bing APIs and in turn enables\n   * higher click-through rates for the API consumer. IMPORTANT: Although optional, you should\n   * consider this header required. Persisting the client ID across multiple requests for the same\n   * end user and device combination enables 1) the API consumer to receive a consistent user\n   * experience, and 2) higher click-through rates via better quality of results from the Bing\n   * APIs. Each user that uses your application on the device must have a unique, Bing generated\n   * client ID. If you do not include this header in the request, Bing generates an ID and returns\n   * it in the X-MSEdge-ClientID response header. The only time that you should NOT include this\n   * header in a request is the first time the user uses your app on that device. Use the client ID\n   * for each Bing API request that your app makes for this user on the device. Persist the client\n   * ID. To persist the ID in a browser app, use a persistent HTTP cookie to ensure the ID is used\n   * across all sessions. Do not use a session cookie. For other apps such as mobile apps, use the\n   * device's persistent storage to persist the ID. The next time the user uses your app on that\n   * device, get the client ID that you persisted. Bing responses may or may not include this\n   * header. If the response includes this header, capture the client ID and use it for all\n   * subsequent Bing requests for the user on that device. ATTENTION: You must ensure that this\n   * Client ID is not linkable to any authenticatable user account information. If you include the\n   * X-MSEdge-ClientID, you must not include cookies in the request.\n   */\n  clientId?: string;\n  /**\n   * The IPv4 or IPv6 address of the client device. The IP address is used to discover the user's\n   * location. Bing uses the location information to determine safe search behavior. Although\n   * optional, you are encouraged to always specify this header and the X-Search-Location header.\n   * Do not obfuscate the address (for example, by changing the last octet to 0). Obfuscating the\n   * address results in the location not being anywhere near the device's actual location, which\n   * may result in Bing serving erroneous results.\n   */\n  clientIp?: string;\n  /**\n   * A semicolon-delimited list of key/value pairs that describe the client's geographical\n   * location. Bing uses the location information to determine safe search behavior and to return\n   * relevant local content. Specify the key/value pair as <key>:<value>. The following are the\n   * keys that you use to specify the user's location. lat (required): The latitude of the client's\n   * location, in degrees. The latitude must be greater than or equal to -90.0 and less than or\n   * equal to +90.0. Negative values indicate southern latitudes and positive values indicate\n   * northern latitudes. long (required): The longitude of the client's location, in degrees. The\n   * longitude must be greater than or equal to -180.0 and less than or equal to +180.0. Negative\n   * values indicate western longitudes and positive values indicate eastern longitudes. re\n   * (required): The radius, in meters, which specifies the horizontal accuracy of the coordinates.\n   * Pass the value returned by the device's location service. Typical values might be 22m for\n   * GPS/Wi-Fi, 380m for cell tower triangulation, and 18,000m for reverse IP lookup. ts\n   * (optional): The UTC UNIX timestamp of when the client was at the location. (The UNIX timestamp\n   * is the number of seconds since January 1, 1970.) head (optional): The client's relative\n   * heading or direction of travel. Specify the direction of travel as degrees from 0 through 360,\n   * counting clockwise relative to true north. Specify this key only if the sp key is nonzero. sp\n   * (optional): The horizontal velocity (speed), in meters per second, that the client device is\n   * traveling. alt (optional): The altitude of the client device, in meters. are (optional): The\n   * radius, in meters, that specifies the vertical accuracy of the coordinates. Specify this key\n   * only if you specify the alt key. Although many of the keys are optional, the more information\n   * that you provide, the more accurate the location results are. Although optional, you are\n   * encouraged to always specify the user's geographical location. Providing the location is\n   * especially important if the client's IP address does not accurately reflect the user's\n   * physical location (for example, if the client uses VPN). For optimal results, you should\n   * include this header and the X-MSEdge-ClientIP header, but at a minimum, you should include\n   * this header.\n   */\n  location?: string;\n  /**\n   * The market where the results come from. Typically, mkt is the country where the user is making\n   * the request from. However, it could be a different country if the user is not located in a\n   * country where Bing delivers results. The market must be in the form <language code>-<country\n   * code>. For example, en-US. The string is case insensitive. For a list of possible market\n   * values, see [Market\n   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets).\n   * NOTE: If known, you are encouraged to always specify the market. Specifying the market helps\n   * Bing route the request and return an appropriate and optimal response. If you specify a market\n   * that is not listed in [Market\n   * Codes](https://docs.microsoft.com/en-us/azure/cognitive-services/bing-visual-search/supported-countries-markets),\n   * Bing uses a best fit market code based on an internal mapping that is subject to change.\n   */\n  market?: string;\n  /**\n   * Filter the image results in actions with type 'VisualSearch' for adult content. The following\n   * are the possible filter values. Off: May return images with adult content. Moderate: Do not\n   * return images with adult content. Strict: Do not return images with adult content. The default\n   * is Moderate. If the request comes from a market that Bing's adult policy requires that\n   * safeSearch is set to Strict, Bing ignores the safeSearch value and uses Strict. If you use the\n   * site: filter in the knowledge request, there is the chance that the response may contain adult\n   * content regardless of what the safeSearch query parameter is set to. Use site: only if you are\n   * aware of the content on the site and your scenario supports the possibility of adult content.\n   * Possible values include: 'Off', 'Moderate', 'Strict'\n   */\n  safeSearch?: SafeSearch;\n  /**\n   * The language to use for user interface strings. Specify the language using the ISO 639-1\n   * 2-letter language code. For example, the language code for English is EN. The default is EN\n   * (English). Although optional, you should always specify the language. Typically, you set\n   * setLang to the same language specified by mkt unless the user wants the user interface strings\n   * displayed in a different language. A user interface string is a string that's used as a label\n   * in a user interface. There are few user interface strings in the JSON response objects. Also,\n   * any links to Bing.com properties in the response objects apply the specified language.\n   */\n  setLang?: string;\n  /**\n   * The form data is a JSON object that identifies the image using an insights token or URL to the\n   * image. The object may also include an optional crop area that identifies an area of interest\n   * in the image. The insights token and URL are mutually exclusive – do not specify both. You may\n   * specify knowledgeRequest form data and image form data in the same request only if\n   * knowledgeRequest form data specifies the cropArea field only (it must not include an insights\n   * token or URL).\n   */\n  knowledgeRequest?: string;\n  /**\n   * The form data is an image binary. The Content-Disposition header's name parameter must be set\n   * to \"image\". You must specify an image binary if you do not use knowledgeRequest form data to\n   * specify the image; you may not use both forms to specify an image. You may specify\n   * knowledgeRequest form data and image form data in the same request only if knowledgeRequest\n   * form data specifies the cropArea field only  (it must not include an insights token or URL).\n   */\n  image?: msRest.HttpRequestBody;\n}\n\n/**\n * Defines values for Currency.\n * Possible values include: 'USD', 'CAD', 'GBP', 'EUR', 'COP', 'JPY', 'CNY', 'AUD', 'INR', 'AED',\n * 'AFN', 'ALL', 'AMD', 'ANG', 'AOA', 'ARS', 'AWG', 'AZN', 'BAM', 'BBD', 'BDT', 'BGN', 'BHD',\n * 'BIF', 'BMD', 'BND', 'BOB', 'BOV', 'BRL', 'BSD', 'BTN', 'BWP', 'BYR', 'BZD', 'CDF', 'CHE',\n * 'CHF', 'CHW', 'CLF', 'CLP', 'COU', 'CRC', 'CUC', 'CUP', 'CVE', 'CZK', 'DJF', 'DKK', 'DOP',\n * 'DZD', 'EGP', 'ERN', 'ETB', 'FJD', 'FKP', 'GEL', 'GHS', 'GIP', 'GMD', 'GNF', 'GTQ', 'GYD',\n * 'HKD', 'HNL', 'HRK', 'HTG', 'HUF', 'IDR', 'ILS', 'IQD', 'IRR', 'ISK', 'JMD', 'JOD', 'KES',\n * 'KGS', 'KHR', 'KMF', 'KPW', 'KRW', 'KWD', 'KYD', 'KZT', 'LAK', 'LBP', 'LKR', 'LRD', 'LSL',\n * 'LYD', 'MAD', 'MDL', 'MGA', 'MKD', 'MMK', 'MNT', 'MOP', 'MRO', 'MUR', 'MVR', 'MWK', 'MXN',\n * 'MXV', 'MYR', 'MZN', 'NAD', 'NGN', 'NIO', 'NOK', 'NPR', 'NZD', 'OMR', 'PAB', 'PEN', 'PGK',\n * 'PHP', 'PKR', 'PLN', 'PYG', 'QAR', 'RON', 'RSD', 'RUB', 'RWF', 'SAR', 'SBD', 'SCR', 'SDG',\n * 'SEK', 'SGD', 'SHP', 'SLL', 'SOS', 'SRD', 'SSP', 'STD', 'SYP', 'SZL', 'THB', 'TJS', 'TMT',\n * 'TND', 'TOP', 'TRY', 'TTD', 'TWD', 'TZS', 'UAH', 'UGX', 'UYU', 'UZS', 'VEF', 'VND', 'VUV',\n * 'WST', 'XAF', 'XCD', 'XOF', 'XPF', 'YER', 'ZAR', 'ZMW'\n * @readonly\n * @enum {string}\n */\nexport type Currency = 'USD' | 'CAD' | 'GBP' | 'EUR' | 'COP' | 'JPY' | 'CNY' | 'AUD' | 'INR' | 'AED' | 'AFN' | 'ALL' | 'AMD' | 'ANG' | 'AOA' | 'ARS' | 'AWG' | 'AZN' | 'BAM' | 'BBD' | 'BDT' | 'BGN' | 'BHD' | 'BIF' | 'BMD' | 'BND' | 'BOB' | 'BOV' | 'BRL' | 'BSD' | 'BTN' | 'BWP' | 'BYR' | 'BZD' | 'CDF' | 'CHE' | 'CHF' | 'CHW' | 'CLF' | 'CLP' | 'COU' | 'CRC' | 'CUC' | 'CUP' | 'CVE' | 'CZK' | 'DJF' | 'DKK' | 'DOP' | 'DZD' | 'EGP' | 'ERN' | 'ETB' | 'FJD' | 'FKP' | 'GEL' | 'GHS' | 'GIP' | 'GMD' | 'GNF' | 'GTQ' | 'GYD' | 'HKD' | 'HNL' | 'HRK' | 'HTG' | 'HUF' | 'IDR' | 'ILS' | 'IQD' | 'IRR' | 'ISK' | 'JMD' | 'JOD' | 'KES' | 'KGS' | 'KHR' | 'KMF' | 'KPW' | 'KRW' | 'KWD' | 'KYD' | 'KZT' | 'LAK' | 'LBP' | 'LKR' | 'LRD' | 'LSL' | 'LYD' | 'MAD' | 'MDL' | 'MGA' | 'MKD' | 'MMK' | 'MNT' | 'MOP' | 'MRO' | 'MUR' | 'MVR' | 'MWK' | 'MXN' | 'MXV' | 'MYR' | 'MZN' | 'NAD' | 'NGN' | 'NIO' | 'NOK' | 'NPR' | 'NZD' | 'OMR' | 'PAB' | 'PEN' | 'PGK' | 'PHP' | 'PKR' | 'PLN' | 'PYG' | 'QAR' | 'RON' | 'RSD' | 'RUB' | 'RWF' | 'SAR' | 'SBD' | 'SCR' | 'SDG' | 'SEK' | 'SGD' | 'SHP' | 'SLL' | 'SOS' | 'SRD' | 'SSP' | 'STD' | 'SYP' | 'SZL' | 'THB' | 'TJS' | 'TMT' | 'TND' | 'TOP' | 'TRY' | 'TTD' | 'TWD' | 'TZS' | 'UAH' | 'UGX' | 'UYU' | 'UZS' | 'VEF' | 'VND' | 'VUV' | 'WST' | 'XAF' | 'XCD' | 'XOF' | 'XPF' | 'YER' | 'ZAR' | 'ZMW';\n\n/**\n * Defines values for ItemAvailability.\n * Possible values include: 'Discontinued', 'InStock', 'InStoreOnly', 'LimitedAvailability',\n * 'OnlineOnly', 'OutOfStock', 'PreOrder', 'SoldOut'\n * @readonly\n * @enum {string}\n */\nexport type ItemAvailability = 'Discontinued' | 'InStock' | 'InStoreOnly' | 'LimitedAvailability' | 'OnlineOnly' | 'OutOfStock' | 'PreOrder' | 'SoldOut';\n\n/**\n * Defines values for ErrorCode.\n * Possible values include: 'None', 'ServerError', 'InvalidRequest', 'RateLimitExceeded',\n * 'InvalidAuthorization', 'InsufficientAuthorization'\n * @readonly\n * @enum {string}\n */\nexport type ErrorCode = 'None' | 'ServerError' | 'InvalidRequest' | 'RateLimitExceeded' | 'InvalidAuthorization' | 'InsufficientAuthorization';\n\n/**\n * Defines values for ErrorSubCode.\n * Possible values include: 'UnexpectedError', 'ResourceError', 'NotImplemented',\n * 'ParameterMissing', 'ParameterInvalidValue', 'HttpNotAllowed', 'Blocked',\n * 'AuthorizationMissing', 'AuthorizationRedundancy', 'AuthorizationDisabled',\n * 'AuthorizationExpired'\n * @readonly\n * @enum {string}\n */\nexport type ErrorSubCode = 'UnexpectedError' | 'ResourceError' | 'NotImplemented' | 'ParameterMissing' | 'ParameterInvalidValue' | 'HttpNotAllowed' | 'Blocked' | 'AuthorizationMissing' | 'AuthorizationRedundancy' | 'AuthorizationDisabled' | 'AuthorizationExpired';\n\n/**\n * Defines values for SafeSearch.\n * Possible values include: 'Off', 'Moderate', 'Strict'\n * @readonly\n * @enum {string}\n */\nexport type SafeSearch = 'Off' | 'Moderate' | 'Strict';\n\n/**\n * Contains response data for the visualSearch operation.\n */\nexport type ImagesVisualSearchResponse = ImageKnowledge & {\n  /**\n   * The underlying HTTP response.\n   */\n  _response: msRest.HttpResponse & {\n      /**\n       * The response body as text (string format)\n       */\n      bodyAsText: string;\n\n      /**\n       * The response body as parsed JSON or XML\n       */\n      parsedBody: ImageKnowledge;\n    };\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\n\nexport const ResponseBase: msRest.CompositeMapper = {\n  serializedName: \"ResponseBase\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"ResponseBase\",\n    className: \"ResponseBase\",\n    modelProperties: {\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Identifiable: msRest.CompositeMapper = {\n  serializedName: \"Identifiable\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Identifiable\",\n    modelProperties: {\n      ...ResponseBase.type.modelProperties,\n      id: {\n        readOnly: true,\n        serializedName: \"id\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Response: msRest.CompositeMapper = {\n  serializedName: \"Response\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Response\",\n    modelProperties: {\n      ...Identifiable.type.modelProperties,\n      readLink: {\n        readOnly: true,\n        serializedName: \"readLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Thing: msRest.CompositeMapper = {\n  serializedName: \"Thing\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Thing\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      name: {\n        readOnly: true,\n        serializedName: \"name\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        readOnly: true,\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      image: {\n        readOnly: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      description: {\n        readOnly: true,\n        serializedName: \"description\",\n        type: {\n          name: \"String\"\n        }\n      },\n      alternateName: {\n        readOnly: true,\n        serializedName: \"alternateName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      bingId: {\n        readOnly: true,\n        serializedName: \"bingId\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Intangible: msRest.CompositeMapper = {\n  serializedName: \"Intangible\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Intangible\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const StructuredValue: msRest.CompositeMapper = {\n  serializedName: \"StructuredValue\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"StructuredValue\",\n    modelProperties: {\n      ...Intangible.type.modelProperties\n    }\n  }\n};\n\nexport const Point2D: msRest.CompositeMapper = {\n  serializedName: \"Point2D\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Point2D\",\n    modelProperties: {\n      ...StructuredValue.type.modelProperties,\n      x: {\n        required: true,\n        serializedName: \"x\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      y: {\n        required: true,\n        serializedName: \"y\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const NormalizedQuadrilateral: msRest.CompositeMapper = {\n  serializedName: \"NormalizedQuadrilateral\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"NormalizedQuadrilateral\",\n    modelProperties: {\n      ...StructuredValue.type.modelProperties,\n      topLeft: {\n        required: true,\n        serializedName: \"topLeft\",\n        type: {\n          name: \"Composite\",\n          className: \"Point2D\"\n        }\n      },\n      topRight: {\n        required: true,\n        serializedName: \"topRight\",\n        type: {\n          name: \"Composite\",\n          className: \"Point2D\"\n        }\n      },\n      bottomRight: {\n        required: true,\n        serializedName: \"bottomRight\",\n        type: {\n          name: \"Composite\",\n          className: \"Point2D\"\n        }\n      },\n      bottomLeft: {\n        required: true,\n        serializedName: \"bottomLeft\",\n        type: {\n          name: \"Composite\",\n          className: \"Point2D\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageTagRegion: msRest.CompositeMapper = {\n  serializedName: \"ImageTagRegion\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageTagRegion\",\n    modelProperties: {\n      queryRectangle: {\n        required: true,\n        serializedName: \"queryRectangle\",\n        type: {\n          name: \"Composite\",\n          className: \"NormalizedQuadrilateral\"\n        }\n      },\n      displayRectangle: {\n        required: true,\n        serializedName: \"displayRectangle\",\n        type: {\n          name: \"Composite\",\n          className: \"NormalizedQuadrilateral\"\n        }\n      }\n    }\n  }\n};\n\nexport const CreativeWork: msRest.CompositeMapper = {\n  serializedName: \"CreativeWork\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"CreativeWork\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      thumbnailUrl: {\n        readOnly: true,\n        serializedName: \"thumbnailUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      provider: {\n        readOnly: true,\n        serializedName: \"provider\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      },\n      datePublished: {\n        readOnly: true,\n        serializedName: \"datePublished\",\n        type: {\n          name: \"String\"\n        }\n      },\n      text: {\n        readOnly: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Action: msRest.CompositeMapper = {\n  serializedName: \"Action\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Action\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      result: {\n        readOnly: true,\n        serializedName: \"result\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Thing\"\n            }\n          }\n        }\n      },\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      isTopAction: {\n        readOnly: true,\n        serializedName: \"isTopAction\",\n        type: {\n          name: \"Boolean\"\n        }\n      },\n      serviceUrl: {\n        readOnly: true,\n        serializedName: \"serviceUrl\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageAction: msRest.CompositeMapper = {\n  serializedName: \"ImageAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageAction\",\n    modelProperties: {\n      ...Action.type.modelProperties,\n      actionType: {\n        readOnly: true,\n        serializedName: \"actionType\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageTag: msRest.CompositeMapper = {\n  serializedName: \"ImageTag\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageTag\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      displayName: {\n        readOnly: true,\n        serializedName: \"displayName\",\n        type: {\n          name: \"String\"\n        }\n      },\n      boundingBox: {\n        readOnly: true,\n        serializedName: \"boundingBox\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageTagRegion\"\n        }\n      },\n      actions: {\n        readOnly: true,\n        serializedName: \"actions\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageAction\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Organization: msRest.CompositeMapper = {\n  serializedName: \"Organization\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Organization\",\n    modelProperties: {\n      ...Thing.type.modelProperties\n    }\n  }\n};\n\nexport const PropertiesItem: msRest.CompositeMapper = {\n  serializedName: \"Properties/Item\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: {\n      serializedName: \"_type\",\n      clientName: \"_type\"\n    },\n    uberParent: \"PropertiesItem\",\n    className: \"PropertiesItem\",\n    modelProperties: {\n      text: {\n        readOnly: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      _type: {\n        required: true,\n        serializedName: \"_type\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const Rating: msRest.CompositeMapper = {\n  serializedName: \"Rating\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: PropertiesItem.type.polymorphicDiscriminator,\n    uberParent: \"PropertiesItem\",\n    className: \"Rating\",\n    modelProperties: {\n      ...PropertiesItem.type.modelProperties,\n      ratingValue: {\n        required: true,\n        serializedName: \"ratingValue\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bestRating: {\n        readOnly: true,\n        serializedName: \"bestRating\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const AggregateRating: msRest.CompositeMapper = {\n  serializedName: \"AggregateRating\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: PropertiesItem.type.polymorphicDiscriminator,\n    uberParent: \"PropertiesItem\",\n    className: \"AggregateRating\",\n    modelProperties: {\n      ...Rating.type.modelProperties,\n      reviewCount: {\n        readOnly: true,\n        serializedName: \"reviewCount\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const Offer: msRest.CompositeMapper = {\n  serializedName: \"Offer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Offer\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      seller: {\n        readOnly: true,\n        serializedName: \"seller\",\n        type: {\n          name: \"Composite\",\n          className: \"Organization\"\n        }\n      },\n      price: {\n        readOnly: true,\n        serializedName: \"price\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      priceCurrency: {\n        readOnly: true,\n        serializedName: \"priceCurrency\",\n        defaultValue: 'USD',\n        type: {\n          name: \"String\"\n        }\n      },\n      availability: {\n        readOnly: true,\n        serializedName: \"availability\",\n        type: {\n          name: \"String\"\n        }\n      },\n      aggregateRating: {\n        readOnly: true,\n        serializedName: \"aggregateRating\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateRating\"\n        }\n      },\n      lastUpdated: {\n        readOnly: true,\n        serializedName: \"lastUpdated\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const AggregateOffer: msRest.CompositeMapper = {\n  serializedName: \"AggregateOffer\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"AggregateOffer\",\n    modelProperties: {\n      ...Offer.type.modelProperties,\n      offers: {\n        readOnly: true,\n        serializedName: \"offers\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Offer\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImagesImageMetadata: msRest.CompositeMapper = {\n  serializedName: \"Images/ImageMetadata\",\n  type: {\n    name: \"Composite\",\n    className: \"ImagesImageMetadata\",\n    modelProperties: {\n      shoppingSourcesCount: {\n        readOnly: true,\n        serializedName: \"shoppingSourcesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      recipeSourcesCount: {\n        readOnly: true,\n        serializedName: \"recipeSourcesCount\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      aggregateOffer: {\n        readOnly: true,\n        serializedName: \"aggregateOffer\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateOffer\"\n        }\n      }\n    }\n  }\n};\n\nexport const MediaObject: msRest.CompositeMapper = {\n  serializedName: \"MediaObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"MediaObject\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      contentUrl: {\n        readOnly: true,\n        serializedName: \"contentUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPageUrl: {\n        readOnly: true,\n        serializedName: \"hostPageUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      contentSize: {\n        readOnly: true,\n        serializedName: \"contentSize\",\n        type: {\n          name: \"String\"\n        }\n      },\n      encodingFormat: {\n        readOnly: true,\n        serializedName: \"encodingFormat\",\n        type: {\n          name: \"String\"\n        }\n      },\n      hostPageDisplayUrl: {\n        readOnly: true,\n        serializedName: \"hostPageDisplayUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      width: {\n        readOnly: true,\n        serializedName: \"width\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      height: {\n        readOnly: true,\n        serializedName: \"height\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageObject: msRest.CompositeMapper = {\n  serializedName: \"ImageObject\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageObject\",\n    modelProperties: {\n      ...MediaObject.type.modelProperties,\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      },\n      imageInsightsToken: {\n        readOnly: true,\n        serializedName: \"imageInsightsToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      insightsMetadata: {\n        readOnly: true,\n        serializedName: \"insightsMetadata\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesImageMetadata\"\n        }\n      },\n      imageId: {\n        readOnly: true,\n        serializedName: \"imageId\",\n        type: {\n          name: \"String\"\n        }\n      },\n      accentColor: {\n        readOnly: true,\n        serializedName: \"accentColor\",\n        type: {\n          name: \"String\"\n        }\n      },\n      visualWords: {\n        readOnly: true,\n        serializedName: \"visualWords\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageKnowledge: msRest.CompositeMapper = {\n  serializedName: \"ImageKnowledge\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageKnowledge\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      tags: {\n        readOnly: true,\n        serializedName: \"tags\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageTag\"\n            }\n          }\n        }\n      },\n      image: {\n        readOnly: true,\n        serializedName: \"image\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorModel: msRest.CompositeMapper = {\n  serializedName: \"Error\",\n  type: {\n    name: \"Composite\",\n    className: \"ErrorModel\",\n    modelProperties: {\n      code: {\n        required: true,\n        serializedName: \"code\",\n        defaultValue: 'None',\n        type: {\n          name: \"String\"\n        }\n      },\n      subCode: {\n        readOnly: true,\n        serializedName: \"subCode\",\n        type: {\n          name: \"String\"\n        }\n      },\n      message: {\n        required: true,\n        serializedName: \"message\",\n        type: {\n          name: \"String\"\n        }\n      },\n      moreDetails: {\n        readOnly: true,\n        serializedName: \"moreDetails\",\n        type: {\n          name: \"String\"\n        }\n      },\n      parameter: {\n        readOnly: true,\n        serializedName: \"parameter\",\n        type: {\n          name: \"String\"\n        }\n      },\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ErrorResponse: msRest.CompositeMapper = {\n  serializedName: \"ErrorResponse\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ErrorResponse\",\n    modelProperties: {\n      ...Response.type.modelProperties,\n      errors: {\n        required: true,\n        serializedName: \"errors\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ErrorModel\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const Person: msRest.CompositeMapper = {\n  serializedName: \"Person\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Person\",\n    modelProperties: {\n      ...Thing.type.modelProperties,\n      jobTitle: {\n        readOnly: true,\n        serializedName: \"jobTitle\",\n        type: {\n          name: \"String\"\n        }\n      },\n      twitterProfile: {\n        readOnly: true,\n        serializedName: \"twitterProfile\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageEntityAction: msRest.CompositeMapper = {\n  serializedName: \"ImageEntityAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageEntityAction\",\n    modelProperties: {\n      ...ImageAction.type.modelProperties\n    }\n  }\n};\n\nexport const ImagesModule: msRest.CompositeMapper = {\n  serializedName: \"ImagesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"ImagesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"ImageObject\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageModuleAction: msRest.CompositeMapper = {\n  serializedName: \"ImageModuleAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageModuleAction\",\n    modelProperties: {\n      ...ImageAction.type.modelProperties,\n      data: {\n        readOnly: true,\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"ImagesModule\"\n        }\n      }\n    }\n  }\n};\n\nexport const Recipe: msRest.CompositeMapper = {\n  serializedName: \"Recipe\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"Recipe\",\n    modelProperties: {\n      ...CreativeWork.type.modelProperties,\n      cookTime: {\n        readOnly: true,\n        serializedName: \"cookTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      prepTime: {\n        readOnly: true,\n        serializedName: \"prepTime\",\n        type: {\n          name: \"String\"\n        }\n      },\n      totalTime: {\n        readOnly: true,\n        serializedName: \"totalTime\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const RecipesModule: msRest.CompositeMapper = {\n  serializedName: \"RecipesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RecipesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Recipe\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageRecipesAction: msRest.CompositeMapper = {\n  serializedName: \"ImageRecipesAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageRecipesAction\",\n    modelProperties: {\n      ...ImageAction.type.modelProperties,\n      data: {\n        readOnly: true,\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"RecipesModule\"\n        }\n      }\n    }\n  }\n};\n\nexport const Query: msRest.CompositeMapper = {\n  serializedName: \"Query\",\n  type: {\n    name: \"Composite\",\n    className: \"Query\",\n    modelProperties: {\n      text: {\n        required: true,\n        serializedName: \"text\",\n        type: {\n          name: \"String\"\n        }\n      },\n      displayText: {\n        readOnly: true,\n        serializedName: \"displayText\",\n        type: {\n          name: \"String\"\n        }\n      },\n      webSearchUrl: {\n        readOnly: true,\n        serializedName: \"webSearchUrl\",\n        type: {\n          name: \"String\"\n        }\n      },\n      searchLink: {\n        readOnly: true,\n        serializedName: \"searchLink\",\n        type: {\n          name: \"String\"\n        }\n      },\n      thumbnail: {\n        readOnly: true,\n        serializedName: \"thumbnail\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageObject\"\n        }\n      }\n    }\n  }\n};\n\nexport const RelatedSearchesModule: msRest.CompositeMapper = {\n  serializedName: \"RelatedSearchesModule\",\n  type: {\n    name: \"Composite\",\n    className: \"RelatedSearchesModule\",\n    modelProperties: {\n      value: {\n        readOnly: true,\n        serializedName: \"value\",\n        type: {\n          name: \"Sequence\",\n          element: {\n            type: {\n              name: \"Composite\",\n              className: \"Query\"\n            }\n          }\n        }\n      }\n    }\n  }\n};\n\nexport const ImageRelatedSearchesAction: msRest.CompositeMapper = {\n  serializedName: \"ImageRelatedSearchesAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageRelatedSearchesAction\",\n    modelProperties: {\n      ...ImageAction.type.modelProperties,\n      data: {\n        readOnly: true,\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"RelatedSearchesModule\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageShoppingSourcesAction: msRest.CompositeMapper = {\n  serializedName: \"ImageShoppingSourcesAction\",\n  type: {\n    name: \"Composite\",\n    polymorphicDiscriminator: ResponseBase.type.polymorphicDiscriminator,\n    uberParent: \"ResponseBase\",\n    className: \"ImageShoppingSourcesAction\",\n    modelProperties: {\n      ...ImageAction.type.modelProperties,\n      data: {\n        readOnly: true,\n        serializedName: \"data\",\n        type: {\n          name: \"Composite\",\n          className: \"AggregateOffer\"\n        }\n      }\n    }\n  }\n};\n\nexport const CropArea: msRest.CompositeMapper = {\n  serializedName: \"CropArea\",\n  type: {\n    name: \"Composite\",\n    className: \"CropArea\",\n    modelProperties: {\n      top: {\n        required: true,\n        serializedName: \"top\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      bottom: {\n        required: true,\n        serializedName: \"bottom\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      left: {\n        required: true,\n        serializedName: \"left\",\n        type: {\n          name: \"Number\"\n        }\n      },\n      right: {\n        required: true,\n        serializedName: \"right\",\n        type: {\n          name: \"Number\"\n        }\n      }\n    }\n  }\n};\n\nexport const ImageInfo: msRest.CompositeMapper = {\n  serializedName: \"ImageInfo\",\n  type: {\n    name: \"Composite\",\n    className: \"ImageInfo\",\n    modelProperties: {\n      imageInsightsToken: {\n        serializedName: \"imageInsightsToken\",\n        type: {\n          name: \"String\"\n        }\n      },\n      url: {\n        serializedName: \"url\",\n        type: {\n          name: \"String\"\n        }\n      },\n      cropArea: {\n        serializedName: \"cropArea\",\n        type: {\n          name: \"Composite\",\n          className: \"CropArea\"\n        }\n      }\n    }\n  }\n};\n\nexport const Filters: msRest.CompositeMapper = {\n  serializedName: \"Filters\",\n  type: {\n    name: \"Composite\",\n    className: \"Filters\",\n    modelProperties: {\n      site: {\n        serializedName: \"site\",\n        type: {\n          name: \"String\"\n        }\n      }\n    }\n  }\n};\n\nexport const KnowledgeRequest: msRest.CompositeMapper = {\n  serializedName: \"KnowledgeRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"KnowledgeRequest\",\n    modelProperties: {\n      filters: {\n        serializedName: \"filters\",\n        type: {\n          name: \"Composite\",\n          className: \"Filters\"\n        }\n      }\n    }\n  }\n};\n\nexport const VisualSearchRequest: msRest.CompositeMapper = {\n  serializedName: \"VisualSearchRequest\",\n  type: {\n    name: \"Composite\",\n    className: \"VisualSearchRequest\",\n    modelProperties: {\n      imageInfo: {\n        serializedName: \"imageInfo\",\n        type: {\n          name: \"Composite\",\n          className: \"ImageInfo\"\n        }\n      },\n      knowledgeRequest: {\n        serializedName: \"knowledgeRequest\",\n        type: {\n          name: \"Composite\",\n          className: \"KnowledgeRequest\"\n        }\n      }\n    }\n  }\n};\n\nexport const discriminators = {\n  'ResponseBase.Point2D' : Point2D,\n  'ResponseBase.NormalizedQuadrilateral' : NormalizedQuadrilateral,\n  'ResponseBase.ImageAction' : ImageAction,\n  'ResponseBase.ImageTag' : ImageTag,\n  'ResponseBase.Organization' : Organization,\n  'PropertiesItem.AggregateRating' : AggregateRating,\n  'ResponseBase.Offer' : Offer,\n  'ResponseBase.AggregateOffer' : AggregateOffer,\n  'ResponseBase.ImageObject' : ImageObject,\n  'ResponseBase.ImageKnowledge' : ImageKnowledge,\n  'ResponseBase.Response' : Response,\n  'ResponseBase.Identifiable' : Identifiable,\n  'ResponseBase.ErrorResponse' : ErrorResponse,\n  'ResponseBase.Thing' : Thing,\n  'ResponseBase.Action' : Action,\n  'ResponseBase.MediaObject' : MediaObject,\n  'ResponseBase' : ResponseBase,\n  'ResponseBase.CreativeWork' : CreativeWork,\n  'ResponseBase.Person' : Person,\n  'ResponseBase.Intangible' : Intangible,\n  'ResponseBase.ImageEntityAction' : ImageEntityAction,\n  'ResponseBase.ImageModuleAction' : ImageModuleAction,\n  'ResponseBase.Recipe' : Recipe,\n  'ResponseBase.ImageRecipesAction' : ImageRecipesAction,\n  'ResponseBase.ImageRelatedSearchesAction' : ImageRelatedSearchesAction,\n  'ResponseBase.ImageShoppingSourcesAction' : ImageShoppingSourcesAction,\n  'ResponseBase.StructuredValue' : StructuredValue,\n  'Properties/Item' : PropertiesItem,\n  'PropertiesItem.Rating' : Rating\n\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is regenerated.\n */\n\nexport {\n  discriminators,\n  Action,\n  AggregateOffer,\n  AggregateRating,\n  CreativeWork,\n  ErrorModel,\n  ErrorResponse,\n  Identifiable,\n  ImageAction,\n  ImageEntityAction,\n  ImageKnowledge,\n  ImageModuleAction,\n  ImageObject,\n  ImageRecipesAction,\n  ImageRelatedSearchesAction,\n  ImageShoppingSourcesAction,\n  ImagesImageMetadata,\n  ImagesModule,\n  ImageTag,\n  ImageTagRegion,\n  Intangible,\n  MediaObject,\n  NormalizedQuadrilateral,\n  Offer,\n  Organization,\n  Person,\n  Point2D,\n  PropertiesItem,\n  Query,\n  Rating,\n  Recipe,\n  RecipesModule,\n  RelatedSearchesModule,\n  Response,\n  ResponseBase,\n  StructuredValue,\n  Thing\n} from \"../models/mappers\";\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\n\nexport const acceptLanguage: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"acceptLanguage\"\n  ],\n  mapper: {\n    serializedName: \"Accept-Language\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientId: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientId\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientID\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const clientIp: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"clientIp\"\n  ],\n  mapper: {\n    serializedName: \"X-MSEdge-ClientIP\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const contentType: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"contentType\"\n  ],\n  mapper: {\n    serializedName: \"Content-Type\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const endpoint: msRest.OperationURLParameter = {\n  parameterPath: \"endpoint\",\n  mapper: {\n    required: true,\n    serializedName: \"Endpoint\",\n    defaultValue: 'https://api.cognitive.microsoft.com',\n    type: {\n      name: \"String\"\n    }\n  },\n  skipEncoding: true\n};\nexport const image: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"image\"\n  ],\n  mapper: {\n    serializedName: \"image\",\n    type: {\n      name: \"Stream\"\n    }\n  }\n};\nexport const knowledgeRequest: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"knowledgeRequest\"\n  ],\n  mapper: {\n    serializedName: \"knowledgeRequest\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const location: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"location\"\n  ],\n  mapper: {\n    serializedName: \"X-Search-Location\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const market: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"market\"\n  ],\n  mapper: {\n    serializedName: \"mkt\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const safeSearch: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"safeSearch\"\n  ],\n  mapper: {\n    serializedName: \"safeSearch\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const setLang: msRest.OperationQueryParameter = {\n  parameterPath: [\n    \"options\",\n    \"setLang\"\n  ],\n  mapper: {\n    serializedName: \"setLang\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const userAgent: msRest.OperationParameter = {\n  parameterPath: [\n    \"options\",\n    \"userAgent\"\n  ],\n  mapper: {\n    serializedName: \"User-Agent\",\n    type: {\n      name: \"String\"\n    }\n  }\n};\nexport const xBingApisSDK: msRest.OperationParameter = {\n  parameterPath: \"xBingApisSDK\",\n  mapper: {\n    required: true,\n    isConstant: true,\n    serializedName: \"X-BingApis-SDK\",\n    defaultValue: 'true',\n    type: {\n      name: \"String\"\n    }\n  }\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"../models\";\nimport * as Mappers from \"../models/imagesMappers\";\nimport * as Parameters from \"../models/parameters\";\nimport { VisualSearchClientContext } from \"../visualSearchClientContext\";\n\n/** Class representing a Images. */\nexport class Images {\n  private readonly client: VisualSearchClientContext;\n\n  /**\n   * Create a Images.\n   * @param {VisualSearchClientContext} client Reference to the service client.\n   */\n  constructor(client: VisualSearchClientContext) {\n    this.client = client;\n  }\n\n  /**\n   * @summary Visual Search API lets you discover insights about an image such as visually similar\n   * images, shopping sources, and related searches. The API can also perform text recognition,\n   * identify entities (people, places, things), return other topical content for the user to\n   * explore, and more. For more information, see [Visual Search\n   * Overview](https://docs.microsoft.com/azure/cognitive-services/bing-visual-search/overview).\n   * @param [options] The optional parameters\n   * @returns Promise<Models.ImagesVisualSearchResponse>\n   */\n  visualSearch(options?: Models.ImagesVisualSearchOptionalParams): Promise<Models.ImagesVisualSearchResponse>;\n  /**\n   * @param callback The callback\n   */\n  visualSearch(callback: msRest.ServiceCallback<Models.ImageKnowledge>): void;\n  /**\n   * @param options The optional parameters\n   * @param callback The callback\n   */\n  visualSearch(options: Models.ImagesVisualSearchOptionalParams, callback: msRest.ServiceCallback<Models.ImageKnowledge>): void;\n  visualSearch(options?: Models.ImagesVisualSearchOptionalParams | msRest.ServiceCallback<Models.ImageKnowledge>, callback?: msRest.ServiceCallback<Models.ImageKnowledge>): Promise<Models.ImagesVisualSearchResponse> {\n    return this.client.sendOperationRequest(\n      {\n        options\n      },\n      visualSearchOperationSpec,\n      callback) as Promise<Models.ImagesVisualSearchResponse>;\n  }\n}\n\n// Operation Specifications\nconst serializer = new msRest.Serializer(Mappers);\nconst visualSearchOperationSpec: msRest.OperationSpec = {\n  httpMethod: \"POST\",\n  path: \"images/visualsearch\",\n  urlParameters: [\n    Parameters.endpoint\n  ],\n  queryParameters: [\n    Parameters.market,\n    Parameters.safeSearch,\n    Parameters.setLang\n  ],\n  headerParameters: [\n    Parameters.xBingApisSDK,\n    Parameters.acceptLanguage,\n    Parameters.contentType,\n    Parameters.userAgent,\n    Parameters.clientId,\n    Parameters.clientIp,\n    Parameters.location\n  ],\n  formDataParameters: [\n    Parameters.knowledgeRequest,\n    Parameters.image\n  ],\n  contentType: \"multipart/form-data\",\n  responses: {\n    200: {\n      bodyMapper: Mappers.ImageKnowledge\n    },\n    default: {\n      bodyMapper: Mappers.ErrorResponse\n    }\n  },\n  serializer\n};\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\n\nconst packageName = \"@azure/cognitiveservices-visualsearch\";\nconst packageVersion = \"3.0.0\";\n\nexport class VisualSearchClientContext extends msRest.ServiceClient {\n  endpoint?: string;\n  credentials: msRest.ServiceClientCredentials;\n\n  /**\n   * Initializes a new instance of the VisualSearchClientContext class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.VisualSearchClientOptions) {\n    if (credentials == undefined) {\n      throw new Error(\"'credentials' cannot be null.\");\n    }\n\n    if (!options) {\n      options = {};\n    }\n\n    if (!options.userAgent) {\n      const defaultUserAgent = msRest.getDefaultUserAgentValue();\n      options.userAgent = `${packageName}/${packageVersion} ${defaultUserAgent}`;\n    }\n\n    super(credentials, options);\n\n    this.endpoint = 'https://api.cognitive.microsoft.com';\n    this.baseUri = \"{Endpoint}/bing/v7.0\";\n    this.requestContentType = \"multipart/form-data\";\n    this.credentials = credentials;\n    if (options.endpoint !== null && options.endpoint !== undefined) {\n      this.endpoint = options.endpoint;\n    }\n  }\n}\n","/*\n * Copyright (c) Microsoft Corporation. All rights reserved.\n * Licensed under the MIT License. See License.txt in the project root for\n * license information.\n *\n * Code generated by Microsoft (R) AutoRest Code Generator.\n * Changes may cause incorrect behavior and will be lost if the code is\n * regenerated.\n */\n\nimport * as msRest from \"@azure/ms-rest-js\";\nimport * as Models from \"./models\";\nimport * as Mappers from \"./models/mappers\";\nimport * as operations from \"./operations\";\nimport { VisualSearchClientContext } from \"./visualSearchClientContext\";\n\nclass VisualSearchClient extends VisualSearchClientContext {\n  // Operation groups\n  images: operations.Images;\n\n  /**\n   * Initializes a new instance of the VisualSearchClient class.\n   * @param credentials Subscription credentials which uniquely identify client subscription.\n   * @param [options] The parameter options\n   */\n  constructor(credentials: msRest.ServiceClientCredentials, options?: Models.VisualSearchClientOptions) {\n    super(credentials, options);\n    this.images = new operations.Images(this);\n  }\n}\n\n// Operation Specifications\n\nexport {\n  VisualSearchClient,\n  VisualSearchClientContext,\n  Models as VisualSearchModels,\n  Mappers as VisualSearchMappers\n};\nexport * from \"./operations\";\n"],"names":["msRest.Serializer","Parameters.endpoint","Parameters.market","Parameters.safeSearch","Parameters.setLang","Parameters.xBingApisSDK","Parameters.acceptLanguage","Parameters.contentType","Parameters.userAgent","Parameters.clientId","Parameters.clientIp","Parameters.location","Parameters.knowledgeRequest","Parameters.image","Mappers.ImageKnowledge","Mappers.ErrorResponse","msRest.getDefaultUserAgentValue","msRest.ServiceClient","operations.Images"],"mappings":"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"}